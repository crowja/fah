#! /usr/bin/env python

import sys
import argparse
import heapq
import numpy as np
from Bio import SeqIO


parser = argparse.ArgumentParser()
parser.add_argument(
    "infile", nargs="?", default=sys.stdin, help="filename (default: stdin)"
)
parser.add_argument("-n", type=int, default=1, help="show N longest seqs (default: 1)")
args = parser.parse_args()

# print("Keeping", args.n, "sequences")
# quit()

best_lens = []
best_ids = []
best_texts = []
heap = []

# Initialize a heap of args.n sequences
for i in range(args.n):
    heapq.heappush(heap, (0, "", ""))

# Update the heap by pushing the new sequence, popping the shortest
for r in SeqIO.parse(args.infile, "fasta"):
    stext = str(r.seq)
    sid = str(r.id)
    heapq.heappushpop(heap, (len(stext), sid, stext))

for s in heap:
    if s[0] > 0:
        print(f">{s[1]}")
        print(s[2])
